// @ts-check

const makeData = (courseSlug, lessonSlug) => ({ courseSlug, lessonSlug });

const java = {
  lists: makeData('java-collections', 'lists'),
  maps: makeData('java-collections', 'maps'),
  generics: makeData('java-collections', 'generics'),
  tests: makeData('java-collections', 'tests'),
  streams: makeData('java-collections', 'streams'),
  lambdas: makeData('java-collections', 'lambdas'),
  'advanced-streams': makeData('java-collections', 'advanced-streams'),
  'other-collections': makeData('java-collections', 'other-collections'),
  'classes-and-objects': makeData('java-oop', 'other-collections'),
  interfaces: makeData('java-oop', 'interfaces'),
  subtyping: makeData('java-oop', 'subtyping'),
  patterns: makeData('java-oop', 'patterns'),
  inheritance: makeData('java-oop', 'inheritance'),
  errors: makeData('java-oop', 'errors'),
  reflections: makeData('java-oop', 'reflections'),
  'code-generation': makeData('java-oop', 'code-generation'),
  http: makeData('java-web', 'http'),
  servlet: makeData('java-web', 'servlet'),
  deploy: makeData('java-web', 'deploy'),
  html: makeData('java-web', 'html'),
  templating: makeData('java-web', 'templating'),
  'crud-in-memory': makeData('java-web', 'crud-in-memory'),
  session: makeData('java-web', 'session'),
  logging: makeData('java-web', 'logging'),
  sql: makeData('java-web', 'sql'),
  jdbc: makeData('java-web', 'jdbc'),
  'crud-with-db': makeData('java-web', 'crud-in-db'),
  orm: makeData('java-web', 'orm'),
  javalin: makeData('java-web', 'javalin'),
  validation: makeData('java-web', 'validation'),
  'rest-api': makeData('java-web', 'rest-api'),
  'web-tests': makeData('java-web', 'tests'),
  'intro-to-spring': makeData('java-spring', 'intro-to-spring'),
  migrations: makeData('java-spring', 'migrations'),
  'spring-orm': makeData('java-spring', 'spring-orm'),
  'spring-tests': makeData('java-spring', 'spring-tests'),
  relations: makeData('java-spring', 'relations'),
  'finite-state-machine': makeData('java-spring', 'finite-state-machine'),
  trees: makeData('java-spring', 'trees'),
  'open-api': makeData('java-spring', 'open-api'),
  filtration: makeData('java-spring', 'filtration'),
  'nested-resources': makeData('java-spring', 'nested-resources'),
  authentication: makeData('java-spring', 'authentication'),
  authorization: makeData('java-spring', 'authorization'),
  'service-layer': makeData('java-spring', 'service-layer'),
  queues: makeData('java-spring', 'queues'),
  'spring-lifecycle': makeData('java-spring', 'spring-lifecycle'),
  'custom-annotations': makeData('java-spring', 'custom-annotations'),
  multithreading: makeData('java-advanced', 'multithreading'),
  'multithreading-java': makeData('java-advanced', 'multithreading-java'),
  'sync-primitives': makeData('java-advanced', 'sync-primitives'),
  asynchrony: makeData('java-advanced', 'asynchrony'),
  'multithreading-spring': makeData('java-advanced', 'multithreading-spring'),
  docker: makeData('java-advanced', 'docker'),
  'test-container': makeData('java-advanced', 'test-containers'),
};

module.exports = {
  java,
};
